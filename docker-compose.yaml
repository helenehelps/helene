# The docker compose configuration for:
#
# 1. Locale development environment (enable databases only).
# 2. Out-of-box small-scale deployment (enable all services).
# 3. For large scale deployment, you may replace some or all of those services
#    because the performance edge services are usually better than
#    traditional containers in that case.
name: helene

services:
  # Cache database (redis).
  cache:
    image: redis:7-alpine
    container_name: helene-cache
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports: [4212:6379]
    volumes: [cache:/data]

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Storage database (postgresql).
  storage:
    image: postgres:17-alpine
    container_name: helene-storage
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports: [4211:5432]
    volumes: [storage:/var/lib/postgresql/data]

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Object storage (minio).
  objects:
    image: minio/minio:latest
    container_name: helene-objects
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

    ports: [4213:9000, 4214:9001] # The second is the UI console port.
    volumes: [objects:/data]
    command: server /data --console-address ":9001"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  cache: { name: helene-cache }
  storage: { name: helene-storage }
  objects: { name: helene-objects }
